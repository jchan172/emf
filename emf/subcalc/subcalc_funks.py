import os
import numpy as np

from ..emf_funks import (_path_manage, _check_extension, _is_number,
                            _check_intable, _flatten)

def read_REF(file_path):
    """Reads a .REF output file generated by the SUBCALC program and pulls
    out information about the reference grid of the model with the Res and
    Max magnetic fields.
    args:
        file_path - string, path to saved .REF output file
    returns:
        data - dict, keys are 'x', 'y', and 'Bmax'
        grid - dict, reference grid information"""

    #check the extension
    file_path = _check_extension(file_path, 'REF', """
        SubCalc results are saved to text files with .REF extensions.
        The input path:
            "%s"
        does not have the correct extension.""" % file_path)

    #allocate dictionaries
    grid_info = {} #dictionary storing reference grid information
    keys = ['X Coord', 'Y Coord', 'Max']
    data = dict(zip(keys, [[] for i in range(len(keys))]))

    #pull data out
    with open(file_path, 'r') as ifile:
        #read through unwanted lines
        for i in range(9):
            ifile.readline()
        #store information about the grid
        for i in range(13):
            line = ifile.readline().strip()
            if(line):
                line = line.split(':')
                if(_is_number(line[1])):
                    grid_info[line[0]] = float(line[1])
                else:
                    grid_info[line[0]] = line[1].strip()
        #read through the rest of the data
        for line in ifile:
            for k in keys:
                if(k == line[:len(k)]):
                    L = line[line.index(':') + 1:]
                    data[k].append([float(i) for i in L.split()[2:]])

    #flatten the lists in data
    for k in data:
        data[k] = np.array(_flatten(data[k]))

    #switch the keys
    data = {'x': data['X Coord'], 'y': data['Y Coord'], 'Bmax': data['Max']}

    return(data, grid_info)
